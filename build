#!/bin/bash

WORK="$HOME/work"
KERNEL_SRC="$WORK/kernel-msm"
mkdir -p "$WORK"
cd "$WORK"

# Clone toolchains
[[ ! -d clang ]] && mkdir clang && curl -Lsq https://android.googlesource.com/platform/prebuilts/clang/host/linux-x86/+archive/refs/heads/android11-release/clang-r383902.tar.gz -o - | tar -xzf - -C clang
[[ ! -d binutils ]] && git clone --depth=1 https://android.googlesource.com/platform/prebuilts/gcc/linux-x86/aarch64/aarch64-linux-android-4.9 -b android11-release binutils
[[ ! -d binutils-32 ]] && git clone --depth=1 https://android.googlesource.com/platform/prebuilts/gcc/linux-x86/arm/arm-linux-androideabi-4.9 -b android11-release binutils-32

# Clone kernel source
[[ ! -d kernel-msm ]] && git clone --depth=1 https://github.com/Seifood/Xiaomi_kernel_zeus -b patch-1 kernel-msm

# Set toolchain path
PATH="$WORK/clang/bin:$WORK/binutils/bin:$WORK/binutils-32/bin:/bin"

# Build kernel
cd "$KERNEL_SRC"

# Make function
make_fun()
{
make O=out \
ARCH=arm64 \
CC=clang \
HOSTCC=clang \
CLANG_TRIPLE=aarch64-linux-gnu- \
CROSS_COMPILE=aarch64-linux-android- \
CROSS_COMPILE_ARM32=arm-linux-androideabi- \
"$1"
}

# Make defconfig
make_fun vendor/zeus_defconfig

# Make kernel
make_fun -j1(nproc --all)


# Upload built kernel
cd $WORK
[[ ! -d ANY ]] && git clone --depth=1 https://github.com/thecatvoid/AnyKernel3.git ANY
cd ANY ; rm -rf *Image* *.zip
cp $KERNEL_SRC/out/arch/arm64/boot/Image.gz ./
date=$(date "+%Y%m%d%I%M%S")
zip -r9 $date.zip * -x .git README.md *placeholder
curl -T $date.zip temp.sh
